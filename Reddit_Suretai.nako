Ver＝「v1.20」
#####メインフォーム設定
ウィンドウ背景色で画面クリア
母艦のタイトルは「意識低めのスレタイ一覧ツール for Reddit」
文字書体は「Meiryo UI」
文字サイズは9
経過ダイアログはオフ

#枠固定にする事でスクロールバーをなくしつつ、WinAPIから無理やりウインドウサイズの変更をサポート
#こうすることでグリッドのサイズ変更がうまくいかないなでしこの仕様を(見た目上)回避しつつメインウインドウに横スクロールバーが発生するダサい状況を回避
#参考　http://nade.jp-pro.net/bbs/bbs3/cbbs.cgi?mode=al2&number=2820&no=0&KLOG=5
母艦のスタイルは「枠固定」
!GWL_STYLE=-16
!WS_SIZEBOX=$40000
SetWindowLong(母艦のハンドル,GWL_STYLE,GetWindowLong(母艦のハンドル,GWL_STYLE)||WS_SIZEBOX)

母艦の終了可能はオフ
母艦の閉じた時は
	コンフィグで「ウインドウサイズ」の「幅」に母艦の幅をINI書く
	コンフィグで「ウインドウサイズ」の「高」に母艦の高さをINI書く
	母艦の終了可能はオン
	終了

#####UA設定
HTTPオプションは「UA=」&「Windows:ISHIKIHIKUI Submission Titles Reader {Ver} (by /u/nuta_unagi)」

#####コンフィグ読み込み
「config.ini」のINI開いてコンフィグに代入
コンフィグで「ウインドウサイズ」の「幅」をINI読んで母艦の幅に代入
コンフィグで「ウインドウサイズ」の「高」をINI読んで母艦の高さに代入
コンフィグで「ブラウザ」の「PATH」をINI読んでブラパスに代入
コンフィグで「板一覧」の「PATH」をINI読んで板一覧パスに代入
板リストに「{板一覧パス}」を開く
//favlistに「fav.conf」を開く

#####部品設定
APIタイマーとはタイマー
その間隔は2
その時満ちた時は
	ボタンオン処理
	
板タブとはタブページ
板タブについて
    X=2
    Y=2
そのタブ多段化はオン

HOTボタンとはボタン
HOTボタンについて
    X=2
    Y=955
    W=95
    H=36
    文字サイズは、20。
    テキストは、「注目」。

NEWボタンとはボタン
NEWボタンについて
    X=100
    Y=955
    W=95
    H=36
    文字サイズは、20。
    テキストは、「新着」。

RISINGボタンとはボタン
RISINGボタンについて
    X=198
    Y=955
    W=95
    H=36
    文字サイズは、20。
    テキストは、「上昇度」。

CONTROVERSIALボタンとはボタン
CONTROVERSIALボタンについて
    X=296
    Y=955
    W=95
    H=36
    文字サイズは、20。
    テキストは、「論争中」。

TOPボタンとはボタン
TOPボタンについて
    X=394
    Y=955
    W=95
    H=35
    文字サイズは、20。
    テキストは、「トップ」。
    
検索ボタンとはボタン
検索ボタンについて
    X=492
    Y=955
    W=95
    H=35
    文字サイズは、20。
    テキストは、「検索」。
    
通知とはステータスバー
通知について
	レイアウトは「下」
	テキストは「意識低めのスレタイ一覧ツール for Reddit　{Ver}」

#右クリックメニュー実装に向けた実験中
スレメニューとはポップアップメニュー
スレメニューについて
	「,スレ開く,スレッドを開く,,,URL処理
	,ソース開く,ソースを開く,,,ソースURL処理
	,スレURLコピー,スレッドURLをコピー,,,URLコピー処理
	,スレタイURLコピー,スレタイとURLをコピー,,,URLスレタイコピー処理」を一括追加。 
//	,ブックマーク,ブックマーク追加,,,ブックマーク処理

######################動的生成祭り######################
板リストを反復
	「板タブに『{対象}』をタブ追加」をナデシコする
	「{対象}スレタイ一覧とはグリッド。{対象}スレタイ一覧について
    X=0
    Y=0
    レイアウトは、『全体』。
    アイテムは、『番号,レス,↑,フレア,スレタイ　　　　　　　　　　　　　　　　　　　　　　　　　　』。
    背景色は、白色。
    ポップアップメニューはスレメニュー
	」をナデシコする
	板タブの表示タブは(回数-1)
	「{対象}スレタイ一覧の親部品は、板タブ」をナデシコする
	「{板タブのテキスト}URLLIST＝『』」をナデシコする
	板数＝回数
	「{対象}スレタイ一覧をダブルクリックした時は
		URL処理」をナデシコする
	「{板タブのテキスト}スレタイ一覧のマウス押した時は
		もし{板タブのテキスト}スレタイ一覧の押されたボタンが『右』ならば
			マウスクリック」をナデシコする
		
######################動的生成祭り######################

板タブに「検索」をタブ追加
板タブの表示タブは板数
「{板タブのテキスト}URLLIST＝『』」をナデシコする
検索スレタイ一覧とはグリッド。検索スレタイ一覧について
    X=0
    Y=0
    W=832
    H=924
    レイアウトは、「全体」。
    アイテムは、『番号,レス,↑,フレア,スレタイ　　　　　　　　　　　　　　　　　　　　　　　　　　』。
    背景色は、白色。
    ポップアップメニューはスレメニュー
検索スレタイ一覧の親部品は、板タブ
「{板タブのテキスト}スレタイ一覧のマウス押した時は
	もし{板タブのテキスト}スレタイ一覧の押されたボタンが『右』ならば
		マウスクリック」をナデシコする
		
//板タブに「ブックマーク」をタブ追加
//板タブの表示タブは(板数+1)
//「{板タブのテキスト}URLLIST＝『』」をナデシコする
//ブックマークスレタイ一覧とはグリッド。ブックマークスレタイ一覧について
//    X=0
//    Y=0
//    W=832
//    H=924
//    レイアウトは、「全体」。
//    アイテムは、『番号,レス,↑,フレア,スレタイ　　　　　　　　　　　　　　　　　　　　　　　　　　』。
//    背景色は、白色。
//    ポップアップメニューはブックマークメニュー
//ブックマークスレタイ一覧の親部品は、板タブ
//「{板タブのテキスト}スレタイ一覧のマウス押した時は
//	もし{板タブのテキスト}スレタイ一覧の押されたボタンが『右』ならば
//		マウスクリック」をナデシコする

//板タブに「履歴」をタブ追加
//板タブの表示タブは(板数+1)
//「{板タブのテキスト}URLLIST＝『』」をナデシコする
//履歴スレタイ一覧とはグリッド。ブックマークスレタイ一覧について
//    X=0
//    Y=0
//    W=832
//    H=924
//    レイアウトは、「全体」。
//    アイテムは、『番号,レス,↑,フレア,スレタイ　　　　　　　　　　　　　　　　　　　　　　　　　　』。
//    背景色は、白色。
//    ポップアップメニューはスレメニュー
//履歴スレタイ一覧の親部品は、板タブ
//「{板タブのテキスト}スレタイ一覧のマウス押した時は
//	もし{板タブのテキスト}スレタイ一覧の押されたボタンが『右』ならば
//		マウスクリック」をナデシコする

板タブの表示タブは0

母艦のサイズ変更した時は～
	CONTROVERSIALボタンのYは((母艦の高さ-32)-（660-595))
	TOPボタンのYは((母艦の高さ-32)-（660-595))
	HOTボタンのYは((母艦の高さ-32)-（660-595))
	NEWボタンのYは((母艦の高さ-32)-（660-595))
	RISINGボタンのYは((母艦の高さ-32)-（660-595))
	検索ボタンのYは((母艦の高さ-32)-（660-595))
	板タブの高さは((母艦の高さ-32)-（660-592))
	#板タブを無理やりウインドウからはみ出させる事でグリッドの不具合を無理やり回避。冒頭のテクとの合わせ技
	#クジラ飛行机さん早くグリッドのスタイル調整まともに出来るようにして・・・
	板タブの幅は(母艦の幅+1000)
	「{板タブのテキスト}スレタイ一覧のセルサイズ自動調節」をナデシコする
	板タブの幅は(母艦の幅-20)
	母艦再描画

板タブを変更した時は
	もし、板タブのテキストが「検索」ならば、
		ボタンオフ処理
		APIタイマーを停止
		0秒待つ
//	違えば、もし、板タブのテキストが「ブックマーク」ならば、
//		ボタンオフ処理
//		APIタイマーを停止
//		0秒待つ
	違えば
		ボタンオン処理
		0秒待つ
HOTボタンをクリックした時は
	hotでAPI取得処理
NEWボタンをクリックした時は
	newでAPI取得処理
RISINGボタンをクリックした時は
	risingでAPI取得処理
CONTROVERSIALボタンをクリックした時は
	controversialでAPI取得処理
TOPボタンをクリックした時は
	topでAPI取得処理

検索ボタンをクリックした時は
	ボタンオフ処理
	APIタイマーを停止
	検索用フォームの可視はオン

検索スレタイ一覧をダブルクリックした時は
	もし、検索ラジオの値が2なら、
		GOOGLEURL処理
	違えば
		URL処理
	
#####検索用フォーム
検索用フォームとはフォーム
その幅は346
その高さは170
その可視はオフ
検索の背景色はウィンドウ背景色
文字書体は「Meiryo UI」
文字サイズは9
検索用フォームのタイトルは「検索」

検索エディタとはエディタ
検索エディタについて
    X=8
    Y=29
    W=236
    H=20
    親部品は検索用フォーム
    文字サイズは、8。
    テキストは、「」。
    背景色は、白色。

検索開始ボタンとはボタン
検索開始ボタンについて
    X=254
    Y=26
    W=74
    H=26
    親部品は検索用フォーム
    文字サイズは、15。
    テキストは、「検索」。

検索ラジオとはラジオ
検索ラジオについて
    X=8
    Y=59
    W=320
    H=65
    親部品は検索用フォーム
    テキストは「検索先選択」
    アイテムは、『スレッド一覧
google(ブラウザ)
google(API)※試験実装中
reddit
』。
	値は0

検索ラベルとはラベル
検索ラベルについて
    X=14
    Y=5
    W=117
    H=11
    親部品は検索用フォーム
    文字サイズは、8。
    文字色は、0。
    テキストは、「検索ワードを入れてください」。
    背景色は、15790320。

検索用フォームのサイズ変更した時は～

検索エディタをクリックした時は
	
検索開始ボタンをクリックした時は
	もし、検索ラジオの値が0ならば、
		検索URLLIST＝検索エディタのテキストを板タブのテキストでスレタイ一覧検索処理
	違えば、もし、検索ラジオの値が1ならば
		検索エディタのテキストを板タブのテキストでGoogle検索処理
		検索用フォームの可視はオフ
		抜ける
	違えば、もし、検索ラジオの値が2ならば
		もし、板タブの表示タブが(板数)なら
			検索URLLIST＝検索エディタのテキストを「板無し」でGoogleAPI検索処理
		違えば
			検索URLLIST＝検索エディタのテキストを板タブのテキストでGoogleAPI検索処理
			検索用フォームの可視はオフ
	違えば、もし、検索ラジオの値が3ならば
		検索エディタのテキストを板タブのテキストでAPI検索処理
		検索用フォームの可視はオフ
		抜ける
	違えば、もし、検索ラジオの値が4ならば
		「未実装です」と言う。
		抜ける
	検索用フォームの可視はオフ
	ボタンオフ処理
	
検索ラジオをクリックした時は
	
検索ラベルをクリックした時は

母艦の可視はオン

#####各種ユーザー設定関数
●母艦設計
	母艦の可視はオフ

●SetWindowLong(h,i,l) =DLL("user32.dll","long SetWindowLongA(hwnd hWnd,int nIndex,long dwNewLong)")
●GetWindowLong(h,i) = DLL("user32.dll","LONG GetWindowLongA(HWND hWnd,int nIndex)")

●ボタンオン処理
	HOTボタンの有効はオン
	NEWボタンの有効はオン
	RISINGボタンの有効はオン
	CONTROVERSIALボタンの有効はオン
	TOPボタンの有効はオン
	検索ボタンの有効はオン

●ボタンオフ処理
	HOTボタンの有効はオフ
	NEWボタンの有効はオフ
	RISINGボタンの有効はオフ
	CONTROVERSIALボタンの有効はオフ
	TOPボタンの有効はオフ
	検索ボタンの有効はオフ

●API取得処理(対象文字列で)
	APIタイマーを開始
	ボタンオフ処理
	通知のテキストは「http://www.reddit.com/r/{板タブのテキスト}/{対象文字列}/.json?limit=100 の取得中」
	0秒待つ
	JSON＝「http://www.reddit.com/r/{板タブのテキスト}/{対象文字列}/.json?limit=100」をHTTPデータ取得
	raw＝JSONをJSONデコード
	「{板タブのテキスト}URLLIST＝rawを板タブのテキストでリスト処理」をナデシコする

●URL処理
	「ct＝『{板タブのテキスト}スレタイ一覧の行』」をナデシコする
	CLICK＝「」
	「CLICK＝{ct}-1」をナデシコする
	UL＝「」
	「UL＝{板タブのテキスト}URLLIST￥{CLICK}」をナデシコする
	もしULが空なら、抜ける
	「{ブラパス} http://www.reddit.com{UL}」を起動する。

●ソースURL処理
	「ct＝『{板タブのテキスト}スレタイ一覧の行』」をナデシコする
	CLICK＝「」
	「CLICK＝{ct}-1」をナデシコする
	UL＝「」
	「UL＝{板タブのテキスト}ソースリスト￥{CLICK}」をナデシコする
	もしULが空なら、抜ける
	「{ブラパス} {UL}」を起動する。
	
●URLコピー処理
	「ct＝『{板タブのテキスト}スレタイ一覧の行』」をナデシコする
	CLICK＝「」
	「CLICK＝{ct}-1」をナデシコする
	UL＝「」
	「UL＝{板タブのテキスト}URLLIST￥{CLICK}」をナデシコする
	もしULが空なら、抜ける
	クリップボードは「http://www.reddit.com{UL}」

●URLスレタイコピー処理
	「tmpスレタイ＝{板タブのテキスト}スレタイ一覧のアイテム」をナデシコする
	「ct＝『{板タブのテキスト}スレタイ一覧の行』」をナデシコする
	CLICK＝「」
	「CLICK＝{ct}-1」をナデシコする
	UL＝「」
	「UL＝{板タブのテキスト}URLLIST￥{CLICK}」をナデシコする
	もしULが空なら、抜ける
	スレタイ＝「」
	「スレタイ＝tmpスレタイ【{ct},4】」をナデシコする
	「クリップボードは『http://www.reddit.com{UL}
{スレタイ}』」をナデシコする

●リスト処理（対象文字列を,ITAで）
	tmp＝「」
	tmpスレタイ＝「」
	tmpスレタイ【0,0】＝『番号,レス,↑,フレア,スレタイ　　　　　　　　　　　　　　　　　　　　　　　　　　』
	パターン＝「\Anum_comments=」
	対象文字列を反復
		対象をパターンで正規表現マッチ
		もし、それが空でなければ、
			対象のパターンを「」へ正規表現置き換え
			それをtmpに一行追加
	tmpを改行で区切ってtmpに代入
	tmpを反復
		tmpスレタイ【回数,0】＝回数
		tmpスレタイ【回数,1】＝対象
	tmp＝「」
	パターン＝「\Ascore=」
	対象文字列を反復
		対象をパターンで正規表現マッチ
		もし、それが空でなければ、
			対象のパターンを「」へ正規表現置き換え
			それをtmpに一行追加
	tmpを改行で区切ってtmpに代入
	tmpを反復
		tmpスレタイ【回数,2】＝対象
	tmp＝「」	
	パターン＝「\Alink_flair_text=」
	対象文字列を反復
		対象をパターンで正規表現マッチ
		もし、それが空でなければ、
			対象のパターンを「」へ正規表現置き換え
			それをtmpに一行追加
	tmpを改行で区切ってtmpに代入
	tmpを反復
		tmpスレタイ【回数,3】＝対象
	tmp＝「」	
	パターン＝「\Adata=title=」
	対象文字列を反復
		対象をパターンで正規表現マッチ
		もし、それが空でなければ、
			対象のパターンを「」へ正規表現置き換え
			それをtmpに一行追加
	tmpを改行で区切ってtmpに代入
	tmpを反復
		tmpスレタイ【回数,4】＝対象
	tmp＝「」
	ulist＝「」
	パターン＝「\Apermalink=」
	対象文字列を反復
		対象をパターンで正規表現マッチ
		もし、それが空でなければ、
			対象のパターンを「」へ正規表現置き換え
			それをulistに一行追加
	ulistを改行で区切ってulistに代入
	tmp＝「」
	slist＝「」
	パターン＝「\Asubreddit=」
	パターン２＝「\Aurl=」
	対象文字列を反復
		対象をパターンで正規表現マッチ
		もし、それが空でなければ、
			対象文字列￥回数のパターン２を「」へ正規表現置き換え
			それをslistに一行追加
	slistを改行で区切ってslistに代入
	「{ITA}ソースリストはslist」をナデシコする
	tmpスレタイ【0,0】＝『番号,レス,↑,フレア,スレタイ　　　　　　　　　　　　　　　　　　　　　　　　　　』
	「{ITA}スレタイ一覧のアイテムはtmpスレタイ」をナデシコする
	板タブの幅は(母艦の幅+1000)
	「{ITA}スレタイ一覧のセルサイズ自動調節」をナデシコする
	板タブの幅は(母艦の幅-20)
	母艦再描画
	通知のテキストは「完了」
	ulistで戻る

●スレタイ一覧検索処理(対象文字列を,ITAで)
	tmp＝「」
	tmpスレタイ＝『番号,レス,↑,フレア,スレタイ　　　　　　　　　　　　　　　　　　　　　　　　　　』
	resultスレタイ＝『番号,レス,↑,フレア,スレタイ　　　　　　　　　　　　　　　　　　　　　　　　　　
』
	「tmpurl＝{ITA}URLLIST」をナデシコする
	ulist＝「」
	「tmpスレタイ＝{ITA}スレタイ一覧のアイテム」をナデシコする
	tmpスレタイを反復
		もし回数が1ならば
			続ける
		違えば、
			対象で対象文字列を文字検索
			もし、それが0でなければ、
				対象をresultスレタイに一行追加
				tmpurl￥(回数-2)をulistに一行追加
	板タブの幅は(母艦の幅+1000)
	検索スレタイ一覧のアイテムはresultスレタイ
	「{ITA}スレタイ一覧のセルサイズ自動調節」をナデシコする
	板タブの幅は(母艦の幅-20)
	母艦再描画
	通知のテキストは「検索結果：{ulistの行数}」
	板タブの表示タブは(板数)
	ulistで戻る

●Google検索処理(対象文字列をITAで)
	検索URI＝「site:www.reddit.com/r/{ITA}/ intitle:{対象文字列}」をURLエンコード
	「{ブラパス} https://www.google.co.jp/search?&q={検索URI}」を起動する。
	ボタンオン処理

●API検索処理(検索ワードを,板で)
	APIタイマーを開始
	ボタンオフ処理
	検索ワード＝検索ワードをUNICODE変換
	検索ワード＝検索ワードをURLエンコード
	通知のテキストは「http://www.reddit.com/r/{板}/search.json?q={検索ワード}&restrict_sr=on&sort=relevance&t=all&limit=100 の取得中」
	0秒待つ
	JSON＝「http://www.reddit.com/r/{板}/search.json?q={検索ワード}&restrict_sr=on&sort=relevance&t=all&limit=100」をHTTPデータ取得
	raw＝JSONをJSONデコード
	板タブの表示タブは(板数)
	検索URLLIST＝rawを「検索」でリスト処理
	通知のテキストは「検索結果：{検索URLLISTの行数}」

#######導入試験中の関数群
●GoogleAPI検索処理(対象文字列を,ITAで)
	tmpスレタイ【0,0】＝『番号,スレタイ　　　　　　　　　　　　　　　　　　　　　　　　　　』
	検索スレタイ一覧のアイテムはtmpスレタイ
	resultスレタイ＝『番号,スレタイ　　　　　　　　　　　　　　　　　　　　　　　　　　
』
	もしITAが「板無し」なら
		検索URI＝「site:www.reddit.com/r/ intitle:{対象文字列}」をURLエンコード
	違えば
		検索URI＝「site:www.reddit.com/r/{ITA}/ intitle:{対象文字列}」をURLエンコード
//	通知のテキストは「https://ajax.googleapis.com/ajax/services/search/web?v=1.0&q={検索URI}&userip={GIP}&rsz=8 の取得中」
	通知のテキストは「https://ajax.googleapis.com/ajax/services/search/web?v=1.0&q={検索URI}&rsz=8 の取得中」
	0秒待つ
//	JSON＝「https://ajax.googleapis.com/ajax/services/search/web?v=1.0&q={検索URI}&userip={GIP}」からHTTPデータ取得
	JSON＝「https://ajax.googleapis.com/ajax/services/search/web?v=1.0&q={検索URI}&rsz=8」からHTTPデータ取得
	raw＝JSONをJSONデコード
	パターン＝「\AtitleNoFormatting=」
	tmp＝rawをパターンでJSON切り出し処理
	tmpを反復
		tmpスレタイ【回数,0】＝回数
		tmpスレタイ【回数,1】＝対象
	検索スレタイ一覧のアイテムはtmpスレタイ
	板タブの幅は(母艦の幅+1000)
	検索スレタイ一覧のセルサイズ自動調節
	板タブの幅は(母艦の幅-20)
	tmp＝「」
	ulist＝「」
	パターン＝「\Aurl=」
	rawを反復
		対象をパターンで正規表現マッチ
		もし、それが空でなければ、
			対象のパターンを「」へ正規表現置き換え
			それをulistに一行追加
	ulistを改行で区切ってulistに代入
	母艦再描画
	通知のテキストは「検索結果：{ulistの行数}(試験中につき8件までしか取得しません)」
	板タブの表示タブは(板数)
	ulistで戻る

●GIP取得処理
	パターン＝「\AREMOTE_ADDR=」
	tmp＝「」
	「http://taruo.net/ip/?」からHTTPデータ取得
	tmp＝それ￥１をパターンで正規表現マッチ
		もし、tmpが空でなければ、
		GIP＝tmpのパターンを「」へ正規表現置き換え
		GIPで戻る
		
●JSON切り出し処理(対象文字列を,パターンで)
	切り出し結果＝「」
	対象文字列を反復
		対象をパターンで正規表現マッチ
		もし、それが空でなければ、
			対象のパターンを「」へ正規表現置き換え
			それを切り出し結果に一行追加
	切り出し結果を改行で区切って切り出し結果に代入
	切り出し結果で戻る
	
●GOOGLEURL処理
	ct＝検索スレタイ一覧の行
	CLICK＝「」
	「CLICK＝{ct}-1」をナデシコする
	UL＝「」
	「UL＝検索URLLIST￥{CLICK}」をナデシコする
	もしULが空なら、抜ける
	「{ブラパス} {UL}」を言う
	「{ブラパス} {UL}」を起動する。
	
